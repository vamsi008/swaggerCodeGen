{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger EmployeeService",
        "contact": {
            "name": "vamsi",
            "email": "vamsee.chava@gmail.com"
        }
    },
    "host": "sample.vamsi.com",
    "basePath": "/api/commons/",
    "tags": [
        {
            "name": "employees",
            "description": "Employee details"
        },
        {
            "name": "projects",
            "description": "Project details"
        },
        {
            "name": "employee-projects",
            "description": "Project specific operations on employees"
        }
    ],
    "schemes": [
        "http", "https"
    ],
    "paths": {
        "/employees": {
            "get": {
                "tags": [
                    "employees"
                ],
                "summary": "Operation for fetching all employees",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Employee list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Employee"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "employees"
                ],
                "summary": "Operation for adding a new employee",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Employee object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee added successfully",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            }
        },
        "/employees/{empID}": {
            "put": {
                "tags": [
                    "employees"
                ],
                "summary": "Operation for updating an employee details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "empID",
                        "in": "path",
                        "description": "Id of the employee to be updated",
                        "required": true,
                        "type": "string"
                    },
		    {
                        "in": "body",
                        "name": "body",
                        "description": "Employee object to be updated to",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee details Updated successfully",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
            "get": {
                "tags": [
                    "employees"
                ],
                "summary": "Operation for getting an employee Details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "empID",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Employee Details Successfully",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
		}
            },
            "delete": {
                "tags": [
                    "employees"
                ],
                "summary": "Operation for deleting an Employee",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "empID",
                        "in": "path",
                        "description": "ID of the Employee",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            }
        },
        "/employees/{empID}/projects": {
            "get": {
                "tags": [
                    "employees"
                ],
                "summary": "Operation for getting project details of an employee",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "empID",
                        "in": "path",
                        "description": "ID of the Employee",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details of an employee",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Fetch All the Projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched all Projects Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for adding a new project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added new Project Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input data"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            }
        },
	
	
        "/projects/{projectID}": {
            "put": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for updating a project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object to be updated to",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Project Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
		    "404": {
                        "description": "Project not found"
                    },
                    "405": {
                        "description": "Invalid input data"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for fetching Project Details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Project Details Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
		    "404": {
                        "description": "Project not found"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for deleting project details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Project Details Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
		    "404": {
                        "description": "Project not found"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            }
        },
	"/projects/{projectID}/employees": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for getting employees in a project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project list constructed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Employee"
                            }
                        },
                        "headers": {
                            "x-expires": {
                                "type": "string"
                            }
                        }
                    },
		    "404": {
                        "description": "Project not found"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
	"post": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for getting employees in a project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "type": "string"
                    },
		    {
                        "in": "body",
                        "name": "body",
                        "description": "EmployeeID to be added",
                        "required": true,
                        "schema": {
                            "type": "object",
			    "required": [
				"empID"
			    ],
			    "properties": {
				"empID": {
				    "type": "integer",
				    "format": "int32"
				}
			    }
			}
		    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee added to the project"
                    },
		    "404": {
                        "description": "Project not found"
                    },
		    "405": {
                        "description": "Invalid input"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            },
	"delete": {
                "tags": [
                    "projects"
                ],
                "summary": "Operation for getting employees in a project",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "type": "string"
                    },
		    {
                        "in": "body",
                        "name": "body",
                        "description": "EmployeeID to be deleted",
                        "required": true,
                        "schema": {
                            "type": "object",
			    "required": [
				"empID"
			    ],
			    "properties": {
				"empID": {
				    "type": "integer",
				    "format": "int32"
				}
			    }
			}
		    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted from the project"
                    },
		    "404": {
                        "description": "Project not found"
                    },
		    "405": {
                        "description": "Invalid input"
                    },
		    "401": {
                        "description": "UnAuthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized Request"
                    }
                }
            }
	}

    },
    "definitions": {
        "Employee": {
            "type": "object",
            "required": [
                "empID",
                "empName",
                "empEmail"
            ],
            "properties": {
                "empID": {
                    "type": "integer",
                    "format": "int32"
                },
                "empName": {
                    "type": "string"
                },
                "empEmail": {
                    "type": "string"
                },
                "managerID": {
                    "type": "string"
                },
                "projectIDs": {
                    "type": "array",
					"items": {
						"type": "string"
					 },
				"uniqueItems": true
                }
            }
        },
        "Project": {
            "type": "object",
            "required": [
                "projectID",
                "projectName",
                "managerID"
            ],
            "properties": {
                "projectID": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "managerID": {
                    "type": "string"
                }
            }
        },
        "BadRequest": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "UnAuthorized": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Forbidden": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
